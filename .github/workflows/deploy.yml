name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Build and Upload Artifacts"]
    types:
      - completed

jobs:
  pull-scan-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Download built artifacts
      - name: Download Core Application Artifact
        uses: actions/download-artifact@v3
        with:
          name: core-application-artifact

      - name: Download Utility Library Artifact
        uses: actions/download-artifact@v3
        with:
          name: utility-library-artifact

      - name: Download API Service Artifact
        uses: actions/download-artifact@v3
        with:
          name: api-service-artifact

      # Step 2: Install Docker for Trivy
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      # Step 3: Scan downloaded artifacts for vulnerabilities using Trivy (via Docker)
      - name: Scan Core Application Artifact
        run: |
          docker run --rm -v $(pwd)/core-application-artifact:/project aquasec/trivy fs /project

      - name: Scan Utility Library Artifact
        run: |
          docker run --rm -v $(pwd)/utility-library-artifact:/project aquasec/trivy fs /project

      - name: Scan API Service Artifact
        run: |
          docker run --rm -v $(pwd)/api-service-artifact:/project aquasec/trivy fs /project

      # Step 4: Deploy JAR files to GitHub Pages
      - name: Deploy JAR files to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deployed-artifacts
          commit_message: "Deploy JAR files to GitHub Pages"

      # Step 5: Prepare JAR files for deployment
      - name: Move JAR Files
        run: |
          mkdir -p deployed-artifacts
          mv core-application-artifact/*.jar deployed-artifacts/
          mv utility-library-artifact/*.jar deployed-artifacts/
          mv api-service-artifact/*.jar deployed-artifacts/
