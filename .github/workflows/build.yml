name: Build, Scan, Upload, and Deploy Artifacts

on:
  workflow_dispatch:

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the main branch
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      # Step 2: Install Docker for Trivy
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Step 3: Scan source code for vulnerabilities and save results
      - name: Scan Core Application Source Code
        run: |
          docker run --rm -v $(pwd):/project aquasec/trivy fs /project > core-application-scan.txt

      # Step 4: Build the code
      - name: Build Application
        run: |
          mvn clean package

      # Step 5: Prepare deployment folder
      - name: Prepare Deployment Folder
        run: |
          mkdir -p deployed-artifacts
          cp target/*.jar deployed-artifacts/
          cp core-application-scan.txt deployed-artifacts/

      # Step 6: Create Index for GitHub Pages
      - name: Create Index for GitHub Pages
        run: |
          echo "<html><body><h1>Deployed Artifacts</h1><ul>" > index.html
          for file in $(ls deployed-artifacts); do
            echo "<li><a href='deployed-artifacts/$file'>$file</a></li>" >> index.html
          done
          echo "</ul></body></html>" >> index.html

      # Step 7: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add deployed-artifacts/ index.html
          git commit -m "Deploy artifacts and scan results to GitHub Pages" || echo "No changes to commit"
          git push origin main
